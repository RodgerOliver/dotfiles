#!/bin/bash
# grp - Git Repos Actions

# set only newline as the separator
IFS=$'\n'

print_help() {
	echo "grp - Execute actions for git repository inside ~/Repos/"
	echo " "
	echo "Usage:"
	echo "  grp -pl -st"
	echo ""
	echo "  Commands are executed in the order that they are passed as arguments."
	echo "  If no arguments are given it is going to show the status of the repo."
	echo ""
	echo "Options:"
	echo "  -h,  --help                  show help"
	echo "  -st, --status                git status"
	echo "  -fe, --fetch                 git fetch"
	echo "  -ps, --push                  git push"
	echo "  -pl, --pull                  git pull"
	echo "  -e,  --exec [command]        execute command for all repos"
	echo "  -p,  --path [path]           location of the repos"
	echo "  -l,  --list                  list repos"
	echo "  --exclude=[repo]             exclude repo from command"
	exit 0
}

GIT_CMD='';
REPOS_PATH="$HOME/Repos/"
FLAG_L=0
FLAG_E=0
EXCLUDE=()

for arg in "$@"; do
	case $arg in
		-h|--help)
			print_help
			shift
			;;
		-st|--status)
			GIT_CMD="$GIT_CMD git status; sleep 1;"
			shift
			;;
		-fe|--fetch)
			GIT_CMD="$GIT_CMD echo 'Fetching repo...'; git fetch;"
			shift
			;;
		-ps|--push)
			GIT_CMD="$GIT_CMD git push;"
			shift
			;;
		-pl|--pull)
			GIT_CMD="$GIT_CMD git pull;"
			shift
			;;
		-e|--exec)
			GIT_CMD="$GIT_CMD $2;"
			shift
			;;
		-p|--path)
			REPOS_PATH=$2
			shift
			;;
		-l|--list)
			FLAG_L=1
			shift
			;;
		--exclude=*)
			EXCLUDE+=(${arg#*=})
			FLAG_E=1
			shift
			;;
		*)
			shift
			;;
	esac
done

home_path=$(echo $HOME | sed 's/\//\\\//g')

if [[ -z $GIT_CMD ]]; then
	GIT_CMD="git status; sleep 1;"
fi

REPOS_PATH=$(echo $REPOS_PATH | sed "s/^~\//$home_path\//")

REPOS_PATH_EX=$(echo $REPOS_PATH | sed 's/\/$//' | sed 's/\//\\\//g')

a=$(find $REPOS_PATH -maxdepth 1 -type d ! -path $REPOS_PATH -exec test -e '{}/.git' ';' -printf '%p\n');

for folder_path in ${a}; do

	folder=$(echo $folder_path | sed "s/$REPOS_PATH_EX\///");

	if [[ $FLAG_E == 1 ]]; then
		do_exclude=$(echo ${EXCLUDE[@]} | grep -P "(^|\ )$folder($|\ )")

		if ! [[ -z $do_exclude ]]; then
			continue
		fi
	fi

	if [[ $FLAG_L -eq 1 ]]; then
		echo "$folder"
		continue
	fi

	echo -e "\n${YELLOW}${BOLD}===================================";
	echo "  $folder";
	echo -e "===================================${RESET}";

	cd $folder_path
	eval $GIT_CMD
	cd - > /dev/null

done
